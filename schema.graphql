interface Post @nodeInterface {
  id: ID!
  slug: String! @slugify
  title: String!
  date: Date! @dateformat
  excerpt(pruneLength: Int = 160): String!
  body: String!
  html: String
  timeToRead: Int
  tags: [PostTag]
  banner: File @fileByRelativePath
  description: String
  canonicalUrl: String
  postType: String!
}

type PostTag {
  name: String
  slug: String
}

interface Page @nodeInterface {
  id: ID!
  slug: String!
  title: String!
  excerpt(pruneLength: Int = 160): String!
  body: String!
}

type MdxPost implements Node & Post {
  slug: String! @slugify
  title: String!
  date: Date! @dateformat
  excerpt(pruneLength: Int = 140): String! @mdxpassthrough(fieldName: "excerpt")
  body: String! @mdxpassthrough(fieldName: "body")
  html: String! @mdxpassthrough(fieldName: "html")
  timeToRead: Int @mdxpassthrough(fieldName: "timeToRead")
  tags: [PostTag]
  banner: File @fileByRelativePath
  description: String
  canonicalUrl: String
  postType: String!
}

type MdxPage implements Node & Page {
  slug: String!
  title: String!
  excerpt(pruneLength: Int = 140): String! @mdxpassthrough(fieldName: "excerpt")
  body: String! @mdxpassthrough(fieldName: "body")
}

type MinimalBlogConfig implements Node {
  basePath: String
  blogPath: String
  postsPath: String
  pagesPath: String
  tagsPath: String
  externalLinks: [ExternalLink]
  navigation: [NavigationEntry]
  showLineNumbers: Boolean
  showCopyButton: Boolean
}

type ExternalLink {
  name: String!
  url: String!
}

type NavigationEntry {
  title: String!
  slug: String!
}
